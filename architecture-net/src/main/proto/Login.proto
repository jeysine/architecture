syntax = "proto3"; 

option java_package = "cn.com.architecture.net.proto";
option java_outer_classname = "LoginServerPublicMsg";
import "Common.proto";
import "GameServerPublic.proto";

message AreaInfo {//分区信息
	required int32 id = 1;			                //类型id,对应数据表定义
	required string name = 2;			            	//分区名
	required string areaIp = 3;			            //分区ip地址
	required int32 areaPort = 4;			        	//分区端口
	required int32 status = 5;			            //当前分区状态
	required int32 tag = 6;			                //标签:推荐、新开等
	optional string extraInfo = 7;			        //扩展信息,如维护时填入维护信息
	repeated ActorInfo actorInfos = 8;				//角色信息,该分区拥有的角色
}

message ActorInfo{
	required int64 userId = 1;			//id
	optional string name = 2[default = ""];         //玩家名
}

message C2SLoginServerCheck { // 登录服校验,游戏启动后的第一条协议，cmd=LOGIN_SERVER_CHECK = 2001,返回 S2CLoginServerCheck
	required ClientInfo clientInfo = 1; //客户端信息
}

message S2CLoginServerCheck { //登录服校验,游戏启动后的第一条协议，cmd=LOGIN_SERVER_CHECK = 2001
	required int32 areaCount = 1; 	//服务器总数量
	required AreaInfo area = 2;			//默认分区
	optional bool isIosInExamine = 3[default = false]; // Ios是否处于评审状态
	optional string resUrl = 4; 		// 资源下载地址
	optional string cdnUrl = 5; 			// 下载资源的cdn url
	optional int32 updateType = 6; // 更新类型,0=无更新,1=强制更新,2=自愿更新
	optional string clientDownloadUrl = 7; 	// 客户端下载地址
	optional string updateInfo = 8 [default = ""]; 	//更新描述:当有版本更新时赋值
	optional string iosInExamineServerUrl = 9; 		//如果客户端对应的版本处于评审状态,返回评审服对应的登录服地址(评审服是一套完整的独立服务器)
	optional string goodInfo = 10;		//公司默认联系方式,其他渠道的客户端则显示对应公司的描述(可能为空)
}

message C2SLoginSdk { //登陆:cmd=LOGIN_SERVER_LOGIN = 2003
	required ClientInfo clientInfo = 1; //客户端信息
	required int32 loginType = 2; //验证方式:0=直接输入账号密码(测试模式),1=sdk登录
	optional string userName = 3; //账号,测试模式时用
	optional string password = 4; // 密码,测试模式时用
	optional string sdkLoginKey = 5; //sdk返回的登录令牌
	optional string platformUserId = 6; //sdk返回的平台userId,日本平台的则是UUID
}

message S2CLoginSdk { //登陆:cmd=LOGIN_SERVER_LOGIN = 2003
	required int32 loginType = 1; //验证方式:0=直接输入账号密码(测试模式),1=sdk登录
	required int64 userId = 2; //登录成功后返回游戏对应的账号id
	required string sessionId = 3; //登入游戏时验证用
	optional bool isNeedTestCode = 4[default = false]; //是否需要激活码登录游戏
	optional int32 resVersion = 5; //最新资源版本号
	repeated int32 encryptCmds = 6;	//需要加密的协议号
	optional string encryptKey = 7; //加密协议用的key
}

message C2SAreaList { //分区列表，cmd=LOGIN_SERVER_AREA_LIST = 2002,返回S2CAreaList
	required ClientInfo clientInfo = 1; //客户端信息
	required int32 startIndex = 2;		//起始id,按规则排序好的服务器列表的起始位置,>=
	required int32 endIndex = 3;		//结束id,<=
	optional int32 extraCode = 4;	//0=平常的服务器列表,1=获取指定id的服务器状态,此时startIndex代表服务器id
	optional bool isShowTestArea = 5[default = false]; //是否显示未开放的测试分区:开服前测试用,只控制显示,是否能进入测试分区还是由账号类型决定
}

message S2CAreaList { //分区列表，cmd=LOGIN_SERVER_AREA_LIST = 2002
	repeated AreaInfo areas = 1;	//分区
	optional int32 extraCode = 2;	//客户端透传参数
}